{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMoviesFromServer","title","a","fetch","response","ok","Error","status","text","json","FindMovie","addMovie","useState","setTitle","setMovie","errorMessage","setError","getMovie","movieFromServer","Response","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","disabled","length","App","setMovies","newMovie","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3576b79e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_KEY = 'cef30696';\n\nexport const getMoviesFromServer = async (title: string) => {\n  const response = await fetch(`https://www.omdbapi.com/?apikey=${API_KEY}&t=${title}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status}: ${response.text}`);\n  }\n\n  return response.json();\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMoviesFromServer } from '../../api/api';\n\ntype Props = {\n  addMovie: (movie: Movie) => void | boolean;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [errorMessage, setError] = useState('');\n\n  const getMovie = async () => {\n    try {\n      const movieFromServer = await getMoviesFromServer(title);\n\n      if (movieFromServer.Response === 'False') {\n        throw new Error('Problem with downloading');\n      }\n\n      setMovie(movieFromServer);\n    } catch (error) {\n      setMovie(null);\n      setError('Cant find a movie with such title');\n    }\n  };\n\n  const chooseMovie = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setError('');\n  };\n\n  const addToList = () => {\n    if (movie) {\n      if (addMovie(movie) === false) {\n        setError('This movie is already on your list');\n      }\n\n      setTitle('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                value={title}\n                onChange={chooseMovie}\n                className=\"input is-danger\"\n              />\n            </div>\n          </label>\n\n          {errorMessage}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n              disabled={errorMessage.length > 0 || !title}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addToList}\n              disabled={errorMessage.length > 0 || !title}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    if (movies.find(movie => movie.imdbID === newMovie.imdbID)) {\n      return false;\n    }\n\n    return setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}